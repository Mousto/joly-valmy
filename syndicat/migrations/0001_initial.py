# Generated by Django 4.0.6 on 2022-08-18 11:06

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Personnel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('civilite', models.CharField(max_length=12)),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
            ],
            options={
                'verbose_name': 'Personnel',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Clinique',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom_clinique', models.CharField(max_length=42)),
                ('adresse', models.CharField(max_length=42)),
            ],
            options={
                'verbose_name': 'clinique',
            },
        ),
        migrations.CreateModel(
            name='Cse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=60)),
                ('siege', models.CharField(max_length=60)),
            ],
        ),
        migrations.CreateModel(
            name='Doleance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('objet', models.CharField(max_length=60)),
                ('contenu', models.TextField()),
                ('date', models.DateField(default=django.utils.timezone.now, verbose_name='Date de demande')),
                ('retenue', models.BooleanField(default=False)),
                ('emeteur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='emeteur_doleances', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Doléance(s) employé',
                'ordering': ['date'],
            },
        ),
        migrations.CreateModel(
            name='Produit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=42)),
                ('prix_adulte', models.FloatField(default=0)),
                ('prix_enfant', models.FloatField(default=0)),
                ('disponible', models.BooleanField(default=False)),
                ('photo', models.ImageField(null=True, upload_to='img-produits/')),
            ],
            options={
                'verbose_name': 'produit',
            },
        ),
        migrations.CreateModel(
            name='registre_du_personnel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=42)),
                ('prenom', models.CharField(max_length=42)),
                ('clinique', models.CharField(default='', max_length=42)),
                ('service', models.CharField(default='', max_length=42)),
                ('civilite', models.CharField(default='', max_length=42)),
                ('syndicat', models.CharField(default='', max_length=42)),
            ],
            options={
                'verbose_name': 'Registre du personnel',
                'ordering': ['nom'],
            },
        ),
        migrations.CreateModel(
            name='Reponse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('objet', models.CharField(max_length=42)),
                ('contenu', models.TextField()),
                ('date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Date de réponse')),
                ('recepteur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recepteur_reponses', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Réponse élu',
                'ordering': ['date'],
            },
        ),
        migrations.CreateModel(
            name='SessionCse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mois', models.CharField(max_length=60)),
                ('date_debut', models.DateField(default=django.utils.timezone.now, verbose_name='Date_début_séssion')),
                ('date_fin', models.DateField(default=django.utils.timezone.now, verbose_name='Date_fin_séssion')),
            ],
        ),
        migrations.CreateModel(
            name='Todo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150)),
                ('description', models.CharField(max_length=500)),
                ('completed', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='DoleanceCse',
            fields=[
                ('doleance_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='syndicat.doleance')),
                ('recepteur_doleance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recepteur_doleances_cse', to='syndicat.cse')),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='session_doleances_cse', to='syndicat.sessioncse')),
            ],
            bases=('syndicat.doleance',),
        ),
        migrations.CreateModel(
            name='DoleanceElu',
            fields=[
                ('doleance_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='syndicat.doleance')),
            ],
            bases=('syndicat.doleance',),
        ),
        migrations.CreateModel(
            name='Elu',
            fields=[
                ('personnel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('syndicat', models.CharField(default='', max_length=60)),
                ('photo', models.ImageField(blank=True, null=True, upload_to='photos/')),
                ('fonction', models.CharField(max_length=120)),
                ('message_aux_collègues', models.TextField(blank=True, null=True)),
                ('disponible', models.BooleanField(default=False)),
                ('cse', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cse', to='syndicat.cse')),
            ],
            options={
                'verbose_name': 'élu',
            },
            bases=('syndicat.personnel',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom_service', models.CharField(max_length=42)),
                ('clinique', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='services', to='syndicat.clinique')),
            ],
            options={
                'verbose_name': 'service',
            },
        ),
        migrations.CreateModel(
            name='Commande',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('billet_adulte', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('billet_enfant', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('valeur_totale', models.FloatField(default=0)),
                ('date_retrait', models.DateField(null=True)),
                ('lieu_retrait', models.CharField(choices=[('Talant', 'Bénigne joly'), ('Valmy', 'SSR Valmy')], default='Talant', max_length=60)),
                ('date', models.DateField(default=django.utils.timezone.now, verbose_name='Date de commande')),
                ('commanditaire', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='commandes', to=settings.AUTH_USER_MODEL)),
                ('produit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='produit', to='syndicat.produit')),
            ],
        ),
        migrations.AddField(
            model_name='personnel',
            name='la_clinique',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='clinique', to='syndicat.clinique'),
        ),
        migrations.AddField(
            model_name='personnel',
            name='le_service',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='service', to='syndicat.service'),
        ),
        migrations.AddField(
            model_name='personnel',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
        migrations.CreateModel(
            name='ReponseElu',
            fields=[
                ('reponse_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='syndicat.reponse')),
                ('doleance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='question_elu', to='syndicat.doleanceelu')),
                ('emeteur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='emetteur_reponse_elu', to='syndicat.elu')),
            ],
            bases=('syndicat.reponse',),
        ),
        migrations.CreateModel(
            name='ReponseCse',
            fields=[
                ('reponse_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='syndicat.reponse')),
                ('doleance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='question_cse', to='syndicat.doleancecse')),
                ('emeteur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='emetteur_reponse_cse', to='syndicat.cse')),
            ],
            bases=('syndicat.reponse',),
        ),
        migrations.AddField(
            model_name='doleanceelu',
            name='recepteur',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recepteur_doleances_elu', to='syndicat.elu'),
        ),
    ]
